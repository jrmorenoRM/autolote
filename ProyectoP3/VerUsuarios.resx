<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBUAAAEAIAD8CgAAFgAAACgAAAAgAAAAKgAAAAEAIAAAAAAA1AoAAAAAAAAAAAAAAAAAAAAA
        AABaOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9YOS9LWTkuR1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9ZOTJHWDkvS1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1g5L0tZOS5HWjsy/1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k5LkdYOS9LWjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/WTox/lo7Mv9aOzL/Wjsy/1o7Mv9aOzL/WToxU1c6Mj1aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/VzoyPVk6
        MVNaOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k6Mf5ZOjLvWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9YOTBzWz0zGVk6
        Mf5aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k6
        Mf5bMzMZWDkwc1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/WToy71o6MbtaOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k5
        MbAAAAAAWTox1Vo7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/WTox1QAAAABZOTCxWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOjG7WTkxWFo7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/WTox9VU8MBVYOTBuWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9YOTBuUTkuFlk6MfVaOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k5MVgAAAABWjoxu1o7
        Mv9aOzL/Wjsy/1k6Mb9ZOi9bWTsyjkgkJAdZOjHVWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9ZOjGuWToxrlo7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/WTow1kgkJAdZOjGPWTovW1g6McBaOzL/Wjsy/1o7Mv9aOjG7AAAAAQAA
        AABPLy8QWDoxwFo7Mv9ZOzHpWDoxGgAAAABZOjGUWTgwP1U2MCpZOjHtWjsy/1o7Mv9aOzL/WTox308v
        LxBPLy8QWTox31o7Mv9aOzL/Wjsy/1k6Me1VNjAqWTgwP1k6MZQAAAAAWDoxGlk7MelaOzL/WDoxwE8v
        LxAAAAAAAAAAAAAAAABVAAADWjswY1c5MUMAAAAAAAAAAF8fHwhZOjFyAAAAAFY5LixZOjHZWjsy/1o6
        MflYNy43AAAAAAAAAABYNy43Wjox+Vo7Mv9ZOjHZWDsvKwAAAABZOjFyXx8fCAAAAAAAAAAAVzkxQ1o7
        MGNVAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWDswRVk6MZxZOjGpWDkwc046Jw0AAAAAAAAAAF8/
        HwhaOTB0WTgxZwAAAAAAAAAAAAAAAAAAAABZODFnWjswdF8/HwgAAAAAAAAAAE46Jw1YOTBzWToxqVk6
        MZxYOzBFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFk5MolZOjH+Wjsy/1o7Mv9aOzL/WTow21sz
        MxkAAAAAAAAAAAAAAAAAAAAAVTgxJFk5MVhXOjFXWTcwJQAAAAAAAAAAAAAAAAAAAABbMzMZWTow21o7
        Mv9aOzL/Wjsy/1k6Mf5YOTGKAAAAAAAAAAAAAAAAAAAAAAAAAABXNy9AWTox/lo7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/WToxqwAAAAAAAAAAWDoxGlk6MbZZOjH+Wjsy/1o7Mv9ZOjH+WToxtlU4LxsAAAAAAAAAAFk6
        MataOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k6Mf5XNy9AAAAAAAAAAAAAAAAAAAAAAFk6MZRaOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9ZOjH5VSoqBlkzJhRaOjHdWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/WTox3lkz
        MxRVKioGWTox+Vo7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k6MZQAAAAAAAAAAAAAAAAAAAAAWjoxoVo7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k6Mf5bNiQOWTkxmlo7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/WTkxmls2JA5ZOjH+Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/WjoxoQAAAAAAAAAAAAAAAAAA
        AABaOTJrWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/WTow1mYzMwVaOjHzWjsy/1o7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9ZOjH0ZjMzBVk6MNZaOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOTJrAAAAAAAA
        AAAAAAAAAAAAAEwzMwpaOjHXWjsy/1o7Mv9aOzL/Wjsy/1k6Mf1aOjBPWjwtIlo7Mv9aOzL/Wjsy/1o7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9XOisjWjowT1k6Mf1aOzL/Wjsy/1o7Mv9aOzL/Wjox10wz
        MwoAAAAAAAAAAAAAAAAAAAAAAAAAAFEzKBlYOTCsWTox+lk6Mf5aOjHaWDgyUQAAAABRMygZWTox/lo7
        Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/WTox/lEzKBkAAAAAWDgyUVo6MdpZOjH+WTox+lg5
        MKxRMygZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/Hx8IVTgqEgAAAAAAAAAAAAAAAAAA
        AABZOTHcWjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9ZOTHcAAAAAAAAAAAAAAAAAAAAAFU4
        KhI/Hx8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFk6MGRaOzL/Wjsy/1o7Mv9aOzL/Wjsy/1o7Mv9aOzL/Wjsy/1k6MGQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFk7MJdZOjH+Wjsy/1o7Mv9aOzL/Wjsy/1k6Mf5ZOzCXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFo5MFVZOzHCWTox9Vk6MfVZOzHCWDkwVAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQAAgAAAAAAAAAAAggAAQcZBgmPwY8YP4Dw8B8AwDAPAAAADwAAAA8AAAAPAAAAD4EACB/ng
        B5//4Af///AP///4H/8=
</value>
  </data>
</root>